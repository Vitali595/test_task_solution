{"version":3,"sources":["components/header/Header.module.css","redux/api.ts","redux/tradersReducers.ts","components/listTraders/ListTraders.tsx","components/header/Header.tsx","components/tradersPage/TradersPage.tsx","images/traderIcon.png","components/barChart/BarChart.jsx","components/mySelect/MySelect.tsx","components/traderProfile/TraderProfile.tsx","components/preloader/Preloader.tsx","components/app/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/traderProfile/TraderProfile.module.css","components/listTraders/ListTraders.module.css","components/app/App.module.css","components/tradersPage/TradersPage.module.css","components/preloader/Preloader.module.css"],"names":["module","exports","instance","axios","create","baseURL","headers","tradersAPI","get","initialState","traders","currentDate","isLoading","setCurrentDate","date","type","setIsLoading","ListTraders","dispatch","useDispatch","useSelector","state","onClickNavLink","setTimeout","className","style","listTraders","map","trader","name","to","id","moreDetails","onClick","Header","header","allHeader","iconArea","icon","title","headerTitle","titleName","version","panel","versionProject","hr","TradersPage","tradersPage","BarChart","historyObj","find","t","Number","history","yearArr","length","labelsArr","dataArr","i","barData","labels","datasets","data","backgroundColor","context","raw","options","scales","y","ticks","stepSize","callback","value","grid","color","tick","label","x","display","plugins","legend","MySelect","useEffect","optionsValue","Object","entries","v","customStyle","control","styles","border","boxShadow","margin","fontSize","paddingLeft","fontFamily","lineHeight","singleValue","option","menu","defaultValue","onChange","e","TraderProfile","useParams","addedDate","added","split","date1","Date","date2","getMonth","getDay","getFullYear","monthLag","Math","ceil","abs","getTime","resultString","traderProfile","row","personal","src","Icon","alt","iconTrader","nameTrader","entryTime","location","description","additionalData","commonInfo","column","title1","interest","roi","count","investors","line","table","column1","title2","current_assets","asset","personal_assets","min_deposit","max_deposit","fee","allowed_dropdown","max_investors","pnl","tr","time","minusProfit","plusProfit","barChart","chart","select","selectText","comeBack","Preloader","linePreloader","App","then","res","catch","error","console","log","message","app","exact","path","render","textError","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","d","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e12a0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1XZcZ\",\"allHeader\":\"Header_allHeader__2uV4H\",\"iconArea\":\"Header_iconArea__1iYdb\",\"icon\":\"Header_icon__giZPv\",\"title\":\"Header_title__3m83c\",\"headerTitle\":\"Header_headerTitle__iI69k\",\"titleName\":\"Header_titleName__SQxMh\",\"version\":\"Header_version__33aen\",\"panel\":\"Header_panel__3oVBv\",\"versionProject\":\"Header_versionProject__3M1Nn\",\"hr\":\"Header_hr__lkqNa\"};","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://solution-fund.com/api/trader/\",\r\n    headers: {\r\n        \"Authorization\": \"Bearer OudDwOorhDOBpLZpxjnekDOEnkfTqHGU\"\r\n    }\r\n})\r\n\r\nexport const tradersAPI = {\r\n    getAll() {\r\n        return instance.get<{ traders: Array<ResponseType> }>(\"getAll/dummy\")\r\n    }\r\n}\r\n\r\nexport type ResponseType = {\r\n    added: string\r\n    allowed_dropdown: number | null\r\n    asset: string | null\r\n    avatar: string\r\n    created_at: string | null\r\n    current_assets: number\r\n    description: string | null\r\n    fee: number | null\r\n    history: HistoryType\r\n    id: number | null\r\n    investors: number | null\r\n    max_deposit: number\r\n    max_investors: number\r\n    min_deposit: number\r\n    name: string | null\r\n    personal_assets: number\r\n    pnl: Array<PnLType>\r\n    roi: string | null\r\n    track: number | null\r\n    updated_at: string | null\r\n}\r\n\r\nexport type PnLType = Array<string>\r\n\r\nexport type HistoryType = {\r\n    2019: Object | null\r\n    2020: Object | null\r\n    2021: Object | null\r\n}","import {Dispatch} from \"redux\";\r\nimport {ResponseType, tradersAPI} from \"./api\"\r\n\r\nconst initialState = {\r\n    traders: [] as Array<ResponseType>,\r\n    currentDate: null as string | null,\r\n    isLoading: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType =\r\n    ReturnType<typeof setTradersData>\r\n    | ReturnType<typeof setCurrentDate>\r\n    | ReturnType<typeof setIsLoading>\r\n\r\nexport const tradersReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"tradersReducer/SET_TRADERS_DATA\":\r\n            return {...state, traders: action.data.map(d => ({...d, history: d.history, pnl: [...d.pnl]}))}\r\n        case \"tradersReducer/SET_CURRENT_DATE\":\r\n            return {...state, currentDate: action.date}\r\n        case \"tradersReducer/SET_IS_LOADING\":\r\n            return {...state, isLoading: action.isLoading}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTradersData = (data: Array<ResponseType>) => ({type: \"tradersReducer/SET_TRADERS_DATA\", data} as const)\r\nexport const setCurrentDate = (date: string | null) => ({type: \"tradersReducer/SET_CURRENT_DATE\", date} as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({type: \"tradersReducer/SET_IS_LOADING\", isLoading} as const)\r\n\r\nexport const getTradersData = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoading(true))\r\n    tradersAPI.getAll()\r\n        .then(res => {\r\n            dispatch(setTradersData(res.data.traders))\r\n            dispatch(setIsLoading(false))\r\n        })\r\n        .catch(error => {\r\n            console.log(error.message ? error.message : \"some error... Please try again.\")\r\n            dispatch(setIsLoading(false))\r\n        })\r\n}","import React from \"react\"\r\nimport style from \"./ListTraders.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {setIsLoading} from \"../../redux/tradersReducers\";\r\n\r\nexport const ListTraders: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {traders} = useSelector((state: AppRootStateType) => state.traders)\r\n\r\n    const onClickNavLink = () => {\r\n        dispatch(setIsLoading(true))\r\n        setTimeout(() => {\r\n            dispatch(setIsLoading(false))\r\n        }, 1000)\r\n    }\r\n\r\n    return (\r\n        <div className={style.listTraders}>\r\n            {traders.map(trader => {\r\n                return (\r\n                    <div className={style.trader} key={trader.id}>\r\n                        <div className={style.name}>{trader.name}</div>\r\n                        <NavLink\r\n                            to={`/traders/${trader.id}`}\r\n                            className={style.moreDetails}\r\n                            onClick={onClickNavLink}\r\n                        >Подробнее</NavLink>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./Header.module.css\"\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <>\r\n            <div className={style.header}>\r\n                <div className={style.allHeader}>\r\n                    <div className={style.iconArea}>\r\n                        <div className={style.icon}/>\r\n                    </div>\r\n                    <div className={style.title}>\r\n                        <div className={style.headerTitle}>Трейдеры</div>\r\n                        <div className={style.titleName}>Инвестиционный фонд Solution</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.version}>\r\n                    <div className={style.panel}>Панель Управления<br/>Solution</div>\r\n                    <div className={style.versionProject}>v.0.2</div>\r\n                </div>\r\n            </div>\r\n            <div className={style.hr}/>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./TradersPage.module.css\"\r\nimport {ListTraders} from \"../listTraders/ListTraders\"\r\nimport {Header} from \"../header/Header\"\r\n\r\nexport const TradersPage: React.FC = () => {\r\n    return (\r\n        <div className={style.tradersPage}>\r\n            <Header/>\r\n            <ListTraders/>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/traderIcon.c591492c.png\";","import {Bar} from \"react-chartjs-2\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nexport const BarChart = ({id}) => {\r\n\r\n    const {traders, currentDate} = useSelector((state) => state.traders)\r\n\r\n    const historyObj = traders.find(t => t.id === Number(id)).history\r\n    const yearArr = historyObj.length !== 0 ? historyObj[currentDate] : null\r\n\r\n    const labelsArr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\r\n    const dataArr = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\r\n    if (yearArr) {\r\n        for (let i = 0; i < labelsArr.length; i++) {\r\n            dataArr[i] = yearArr[labelsArr[i]]\r\n        }\r\n    }\r\n\r\n    const barData = {\r\n        labels: labelsArr,\r\n        datasets: [\r\n            {\r\n                data: yearArr ? dataArr : [],\r\n                backgroundColor: context => context.raw <= 0 ? \"#c11e1e\" : \"rgb(53,171,23)\",\r\n            }\r\n        ]\r\n    }\r\n\r\n    const barOptions = {\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    ticks: {\r\n                        stepSize: 10,\r\n                        callback: function (value) {\r\n                            return value + \"%\";\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        color: context => context.tick.label === \"0%\" ? \"#ffffff\" : \"#2f323b\"\r\n                    }\r\n                },\r\n                x: {\r\n                    grid: {\r\n                        display: false,\r\n                    }\r\n                }\r\n            },\r\n            plugins: {\r\n                legend: false\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Bar\r\n                data={barData}\r\n                options={barOptions.options}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\"\r\nimport Select from \"react-select\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {setCurrentDate} from \"../../redux/tradersReducers\"\r\n\r\ntype MySelectPropsType = {\r\n    id: string\r\n}\r\n\r\nexport const MySelect: React.FC<MySelectPropsType> = ({id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {traders} = useSelector((state: AppRootStateType) => state.traders)\r\n\r\n    useEffect(() => {\r\n        if (options[0]) {\r\n            dispatch(setCurrentDate(options[0].value))\r\n        }\r\n    }, [])\r\n\r\n    const historyObj = traders.find(t => t.id === Number(id))\r\n    const optionsValue = historyObj ? historyObj.history : []\r\n    const options = Object.entries(optionsValue).map(v => ({value: v[0], label: v[0]}))\r\n\r\n    const selectCallback = (e: { value: string, label: string } | null) => {\r\n        if (e) {\r\n            dispatch(setCurrentDate(e.value))\r\n        }\r\n    }\r\n\r\n    const customStyle = {\r\n        control: (styles: any) => ({\r\n            ...styles,\r\n            border: \"0\",\r\n            boxShadow: \"none\",\r\n            margin: \"10px 10px 10px 0\",\r\n            backgroundColor: \"rgb(57 60 69)\",\r\n            fontSize: \"1rem\",\r\n            paddingLeft: 'center',\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            lineHeight: \"1.1\"\r\n        }),\r\n        singleValue: (styles: any) => ({\r\n            ...styles,\r\n            backgroundColor: \"rgb(57 60 69)\",\r\n            color: \"#949ba2\",\r\n            border: \"none\",\r\n            fontSize: \"1rem\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            lineHeight: \"1.1\"\r\n        }),\r\n        option: (styles: any) => ({\r\n            ...styles,\r\n            backgroundColor: \"rgb(57 60 69)\",\r\n            color: \"#949ba2\",\r\n            fontSize: \"1rem\",\r\n            fontFamily: \"'Roboto', sans-serif\",\r\n            lineHeight: \"1.1\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#007bff\",\r\n                color: \"#FFFF\"\r\n            }\r\n        }),\r\n        menu: (styles: any) => ({\r\n            ...styles,\r\n            backgroundColor: \"rgb(57 60 69)\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Select\r\n            options={options}\r\n            styles={customStyle}\r\n            defaultValue={options[0]}\r\n            onChange={selectCallback}\r\n        />\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./TraderProfile.module.css\"\r\nimport {Header} from \"../header/Header\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../redux/store\"\r\nimport {NavLink, useParams} from \"react-router-dom\"\r\nimport Icon from \"../../images/traderIcon.png\"\r\nimport {ResponseType} from \"../../redux/api\"\r\nimport {BarChart} from \"../barChart/BarChart\"\r\nimport {MySelect} from \"../mySelect/MySelect\"\r\nimport {setIsLoading} from \"../../redux/tradersReducers\"\r\n\r\nexport const TraderProfile: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<{ id: string }>()\r\n    const {traders} = useSelector((state: AppRootStateType) => state.traders)\r\n\r\n    const trader: ResponseType | undefined = traders.find(t => t.id === Number(id))\r\n\r\n    const onClickNavLink = () => {\r\n        dispatch(setIsLoading(true))\r\n        setTimeout(() => {\r\n            dispatch(setIsLoading(false))\r\n        }, 1000)\r\n    }\r\n\r\n    const addedDate = trader ? trader.added.split(\"-\") : []\r\n    const date1 = new Date(`${addedDate[1]}-${addedDate[2]}-${addedDate[0]}`)\r\n    const currentDate = new Date()\r\n    const date2 = new Date(`${currentDate.getMonth()}-${currentDate.getDay()}-${currentDate.getFullYear()}`)\r\n    const monthLag = Math.ceil(Math.ceil(Math.abs(date2.getTime() - date1.getTime()) / (1000 * 3600 * 24)) / 30) + 2\r\n    let resultString = `Вступил в команду `\r\n    if (monthLag >= 12) {\r\n        resultString += `1 год назад`\r\n    } else if (monthLag <= 1) {\r\n        resultString += `${monthLag} месяц назад`\r\n    } else if (monthLag === 2 || monthLag === 3 || monthLag === 4) {\r\n        resultString += `${monthLag} месяца назад`\r\n    } else if (monthLag === 5 || monthLag === 6 || monthLag === 7\r\n        || monthLag === 8 || monthLag === 9 || monthLag === 10 || monthLag === 11) {\r\n        resultString += `${monthLag} месяцв назад`\r\n    }\r\n\r\n    return (\r\n        <div className={style.traderProfile}>\r\n            <Header/>\r\n            {trader &&\r\n            <div className={style.row}>\r\n                <div className={style.personal}>\r\n                    <img src={Icon} alt=\"icon\" className={style.iconTrader}/>\r\n                    <div className={style.nameTrader}>{trader.name}</div>\r\n                    <div className={style.entryTime}>{resultString}</div>\r\n                    <div className={style.location}>{trader.description}</div>\r\n                </div>\r\n                <div className={style.additionalData}>\r\n                    <div className={style.commonInfo}>\r\n                        <div className={style.column}>\r\n                            <div className={style.title1}>ROI</div>\r\n                            <div className={style.interest}>{`${trader.roi}%`}</div>\r\n                        </div>\r\n                        <div className={style.column}>\r\n                            <div className={style.title1}>Инвесторы</div>\r\n                            <div className={style.count}>{trader.investors}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.line}/>\r\n                    <div className={style.table}>\r\n                        <div className={style.column1}>\r\n                            <div>\r\n                                <div className={style.title2}>Активов под управлением</div>\r\n                                <div className={style.count}>\r\n                                    {trader.current_assets <= 0 ? \"∞\" : `${trader.asset} ${trader.current_assets}`}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Собственные активы трейдера</div>\r\n                                <div className={style.count}>\r\n                                    {trader.personal_assets <= 0 ? \"∞\" : `${trader.asset} ${trader.personal_assets}`}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Минимальный депозит</div>\r\n                                <div className={style.count}>\r\n                                    {trader.min_deposit <= 0 ? \"∞\" : `${trader.asset} ${trader.min_deposit}`}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Максимальный депозит</div>\r\n                                <div className={style.count}>\r\n                                    {trader.max_deposit <= 0 ? \"∞\" : `${trader.asset} ${trader.max_deposit}`}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.column1}>\r\n                            <div>\r\n                                <div className={style.title2}>Копирование сделок</div>\r\n                                <div className={style.count}>Да</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Комиссия с успешных сделок</div>\r\n                                <div className={style.count}>{`${trader.fee}%`}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Допустимая просадка</div>\r\n                                <div className={style.count}>{`${trader.allowed_dropdown}%`}</div>\r\n                            </div>\r\n                            <div>\r\n                                <div className={style.title2}>Максимальное количество инвесторов</div>\r\n                                <div className={style.count}>\r\n                                    {trader.max_investors <= 0 ? \"∞\" : `${trader.max_investors}`}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.column1}>\r\n                            <div className={style.count}>PnL</div>\r\n                            {trader.pnl.map((tr, i) => {\r\n                                return (\r\n                                    <div className={style.time} key={i}>\r\n                                        <div className={style.title2}>{tr[0]}</div>\r\n                                        {Number(tr[1]) <= 0\r\n                                            ? <div className={style.minusProfit}>{tr[1]}</div>\r\n                                            : <div className={style.plusProfit}>{tr[1]}</div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n            <div className={style.barChart}>\r\n                <div className={style.chart}>\r\n                    <BarChart id={id}/>\r\n                </div>\r\n                <div className={style.select}>\r\n                    <div className={style.selectText}>Выберите год</div>\r\n                    <MySelect id={id}/>\r\n                </div>\r\n            </div>\r\n            <NavLink\r\n                to={`/`}\r\n                className={style.comeBack}\r\n                onClick={onClickNavLink}\r\n            >Все трейдеры</NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport style from \"./Preloader.module.css\"\r\n\r\nexport const Preloader: React.FC = () => {\r\n    return (\r\n        <div className={style.linePreloader}/>\r\n    )\r\n}","import React, {useEffect} from \"react\"\nimport \"./App.module.css\"\nimport style from \"./App.module.css\"\nimport {TradersPage} from \"../tradersPage/TradersPage\"\nimport {TraderProfile} from \"../traderProfile/TraderProfile\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {getTradersData, setCurrentDate} from \"../../redux/tradersReducers\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {AppRootStateType} from \"../../redux/store\"\nimport {Preloader} from \"../preloader/Preloader\"\n\nexport const App: React.FC = () => {\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getTradersData())\n        dispatch(setCurrentDate(currentDate))\n    }, [])\n\n    const {traders, currentDate, isLoading} = useSelector((state: AppRootStateType) => state.traders)\n\n    return (\n        <div className={style.app}>\n            {traders.length !== 0 && !isLoading ?\n                <Switch>\n                    <Route exact path={\"/\"} render={() => <TradersPage/>}/>\n                    <Route path={\"/traders/:id\"} render={() => <TraderProfile/>}/>\n                    <Route path={\"/404\"} render={() => <div className={style.textError}>404: PAGE NOT FOUND</div>}/>\n                    <Redirect from={\"*\"} to={\"/404\"}/>\n                </Switch>\n                : <Preloader/>\n            }\n        </div>\n    )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunkMiddleware from \"redux-thunk\"\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport {tradersReducer} from \"./tradersReducers\"\r\n\r\nconst rootReducer = combineReducers({\r\n    traders: tradersReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport {App} from \"./components/app/App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/store\"\nimport {HashRouter} from \"react-router-dom\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\nreportWebVitals()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"traderProfile\":\"TraderProfile_traderProfile__G_e8P\",\"row\":\"TraderProfile_row__3IkMG\",\"personal\":\"TraderProfile_personal__-LoO0\",\"iconTrader\":\"TraderProfile_iconTrader__8KHIt\",\"nameTrader\":\"TraderProfile_nameTrader__1GTTD\",\"entryTime\":\"TraderProfile_entryTime__1N9tB\",\"location\":\"TraderProfile_location__3BlOe\",\"additionalData\":\"TraderProfile_additionalData__3xkk8\",\"commonInfo\":\"TraderProfile_commonInfo__15Ihd\",\"column\":\"TraderProfile_column__SNGUJ\",\"line\":\"TraderProfile_line__1j7Ys\",\"table\":\"TraderProfile_table__2C_9M\",\"title1\":\"TraderProfile_title1__12udS\",\"title2\":\"TraderProfile_title2__2tFY0\",\"interest\":\"TraderProfile_interest__22uMg\",\"count\":\"TraderProfile_count__1ChzP\",\"column1\":\"TraderProfile_column1__qvYv1\",\"time\":\"TraderProfile_time__3HTsD\",\"plusProfit\":\"TraderProfile_plusProfit__3rEWl\",\"minusProfit\":\"TraderProfile_minusProfit__ZHZ8P\",\"barChart\":\"TraderProfile_barChart__3YzXr\",\"chart\":\"TraderProfile_chart__1sjku\",\"select\":\"TraderProfile_select__2hRlo\",\"selectText\":\"TraderProfile_selectText__isoEE\",\"comeBack\":\"TraderProfile_comeBack__36Svt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listTraders\":\"ListTraders_listTraders__MmK-V\",\"trader\":\"ListTraders_trader__oEeQ3\",\"name\":\"ListTraders_name__1uEU7\",\"moreDetails\":\"ListTraders_moreDetails__2bJ9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__ESFWR\",\"textError\":\"App_textError__2arTa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tradersPage\":\"TradersPage_tradersPage__2Z-VC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linePreloader\":\"Preloader_linePreloader__wzXpy\",\"scroll\":\"Preloader_scroll__1K8xo\"};"],"sourceRoot":""}